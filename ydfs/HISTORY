v1.18 2012.12.28
(1)修复了一个导致无限connect的BUG
(2)实现了单storage恢复机制
(3)实现了tracker热插拔机制(可能存在BUG,尚未测试完毕)
进入故障恢复机制实现阶段，目前的故障恢复功能可能是不稳定的(26号即实现完毕，因系统故障丢失重写了代码)。
v1.17 2012.12.19
(1)修复了一个导致线程假死的BUG
(2)确定了简单分块算法
(3)实现了定长分配内存池，或者叫做对象池，大大减少了malloc,free调用的开销,并且减少了tracker和storage被换入SWAP的机会,大大提高了程序的效率
经过单机压测,大数据量时W级并发的上传下载速度是上个版本是10倍
v1.16 2012.12.8
（1)优化了网络IO和磁盘IO的全异步模型，
每个网络IO线程 push pClient入IO线程的aio队列，aio队列完成任务重新push回pClient来自的网络IO线程
（2)优化了分块模块，
使其成为每个线程一个分块队列，预计下阶段优化分块算法，以解决目前分块算法效率和利用率都不高的情况
（3)多次测试了100G数据的W级并发上传下载情况，目前没发现问题。
v1.15
完成同步功能,完成小文件上传合并存储(1M)功能
这是该项目的过渡版本，仅用于学术交流，不推荐线上使用，预期下个版本进入优化阶段
预期下阶段优化内容包括
（1）磁盘多线程队列优化
（2）分块选择块方法,多线程队列的优化
v1.14
完成上传，下载功能。
这是该项目的过渡版本，仅用于学术交流，不推荐下载。
v1.13
重写整个架构，架构图可见主页。
该版本没有上传，下载，同步功能。仅有心跳模块和底层异步网络模块。
这是该项目的过渡版本，仅用于学术交流，不推荐下载。
v1.12
发现在同步逻辑存在BUG，重做整个架构。1.13将存在巨大的改变。不推荐使用1.13之前的任何版本。
v1.11
简化程序逻辑。修复BUG。
v1.10
client使用了线程池来进行压测。修复BUG。
v1.09
修复BUG
v1.08
使用磁盘读写异步IO机制（可能存在BUG，尚未测试）
v1.07
修正同步时的BUG
v1.06
改正了异步事件库造成的各种BUG
v1.05
storage使用redis的异步事件库
v1.04
tracker推倒进程阻塞accept+线程池方案
使用redis的异步事件库，使用后发现系统资源占用减少，并且优化了网络IO效率。
下一步修改在storage实现该架构
v1.03
优化了底层网络，解决了一些BUG。
使用tracker.log,storage.log日志记录服务器状态
tracker程序文件夹存在tracker程序，tracker.log
storage程序文件夹存在storage程序，data文件夹,binlog.dat,binlog.mark
binlog.dat记录同步信息，binlog.mark记录同步状态，fdfs已经使用的磁盘大小
v1.02
优化了底层网络，解决了一些BUG
v1.01
同步功能可以使用，解决了一些BUG
v1.00
上传下载功能可以使用
